{"changed":true,"filter":false,"title":"main.go","tooltip":"/lambda/main.go","value":"package main\n\nimport (\n\t\"errors\"\n\t\"github.com/aws/aws-lambda-go/events\"\n\t\"github.com/aws/aws-lambda-go/lambda\"\n\t\"log\"\n)\n\nvar (\n\t// ErrNameNotProvided is thrown when a name is not provided\n\tErrNameNotProvided = errors.New(\"no name was provided in the HTTP body\")\n)\n\n// Handler is your Lambda function handler\n// It uses Amazon API Gateway request/responses provided by the aws-lambda-go/events package,\n// However you could use other event sources (S3, Kinesis etc), or JSON-decoded primitive types such as 'string'.\nfunc Handler(request events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {\n\n\t// stdout and stderr are sent to AWS CloudWatch Logs\n\tlog.Printf(\"Processing Lambda request %s\\n\", request.RequestContext.RequestID)\n\n\t// If no name is provided in the HTTP request body, throw an error\n\tif len(request.Body) < 1 {\n\t\treturn events.APIGatewayProxyResponse{}, ErrNameNotProvided\n\t}\n\n\treturn events.APIGatewayProxyResponse{\n\t\tBody:       \"Hello \" + request.Body,\n\t\tStatusCode: 200,\n\t}, nil\n\n}\n\nfunc main() {\n\tlambda.Start(Handler)\n}\n","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":36,"column":1},"action":"insert","lines":["package main","","import ("," \"errors\""," \"log\""," \"github.com/aws/aws-lambda-go/events\""," \"github.com/aws/aws-lambda-go/lambda\"",")","","var ("," // ErrNameNotProvided is thrown when a name is not provided"," ErrNameNotProvided = errors.New(\"no name was provided in the HTTP body\")",")","","// Handler is your Lambda function handler","// It uses Amazon API Gateway request/responses provided by the aws-lambda-go/events package,","// However you could use other event sources (S3, Kinesis etc), or JSON-decoded primitive types such as 'string'.","func Handler(request events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {",""," // stdout and stderr are sent to AWS CloudWatch Logs"," log.Printf(\"Processing Lambda request %s\\n\", request.RequestContext.RequestID)",""," // If no name is provided in the HTTP request body, throw an error"," if len(request.Body) < 1 {","  return events.APIGatewayProxyResponse{}, ErrNameNotProvided"," }",""," return events.APIGatewayProxyResponse{","  Body:       \"Hello \" + request.Body,","  StatusCode: 200,"," }, nil","","}","","func main() {"," lambda.Start(Handler)","}"],"id":1}],[{"start":{"row":3,"column":0},"end":{"row":3,"column":1},"action":"remove","lines":[" "],"id":2,"ignore":true},{"start":{"row":3,"column":0},"end":{"row":3,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":4,"column":0},"end":{"row":5,"column":1},"action":"remove","lines":[" \"log\""," "]},{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"remove","lines":[" "]},{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["\t\"log\"",""]},{"start":{"row":10,"column":0},"end":{"row":10,"column":1},"action":"remove","lines":[" "]},{"start":{"row":10,"column":0},"end":{"row":10,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":11,"column":0},"end":{"row":11,"column":1},"action":"remove","lines":[" "]},{"start":{"row":11,"column":0},"end":{"row":11,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"remove","lines":[" "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":20,"column":0},"end":{"row":20,"column":1},"action":"remove","lines":[" "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":22,"column":0},"end":{"row":22,"column":1},"action":"remove","lines":[" "]},{"start":{"row":22,"column":0},"end":{"row":22,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":23,"column":0},"end":{"row":23,"column":1},"action":"remove","lines":[" "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":24,"column":0},"end":{"row":24,"column":2},"action":"remove","lines":["  "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":2},"action":"insert","lines":["\t\t"]},{"start":{"row":25,"column":0},"end":{"row":25,"column":1},"action":"remove","lines":[" "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":27,"column":0},"end":{"row":27,"column":1},"action":"remove","lines":[" "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":28,"column":0},"end":{"row":28,"column":2},"action":"remove","lines":["  "]},{"start":{"row":28,"column":0},"end":{"row":28,"column":2},"action":"insert","lines":["\t\t"]},{"start":{"row":29,"column":0},"end":{"row":29,"column":2},"action":"remove","lines":["  "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":2},"action":"insert","lines":["\t\t"]},{"start":{"row":30,"column":0},"end":{"row":30,"column":1},"action":"remove","lines":[" "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":35,"column":0},"end":{"row":35,"column":1},"action":"remove","lines":[" "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":36,"column":1},"end":{"row":37,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":2,"column":8},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":3,"column":0},"end":{"row":3,"column":4},"action":"insert","lines":["    "]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":32,"column":1},"end":{"row":32,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1519741402248}